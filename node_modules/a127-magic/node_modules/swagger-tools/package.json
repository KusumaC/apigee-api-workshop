{
  "name": "swagger-tools",
  "version": "0.5.0",
  "description": "Various tools for using and integrating with Swagger.",
  "main": "index.js",
  "scripts": {
    "test": "./node_modules/gulp/bin/gulp.js"
  },
  "author": {
    "name": "Jeremy Whitlock",
    "email": "jwhitlock@apache.org",
    "url": "https://github.com/whitlockjc"
  },
  "bugs": {
    "url": "https://github.com/apigee/connect-swagger/issues"
  },
  "homepage": "https://github.com/apigee/connect-swagger",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/apigee/connect-swagger.git"
  },
  "keywords": [
    "connect",
    "swagger"
  ],
  "files": [
    "index.js",
    "LICENSE",
    "lib",
    "middleware",
    "schemas"
  ],
  "devDependencies": {
    "body-parser": "^1.5.2",
    "connect": "^3.1.0",
    "gulp": "^3.8.6",
    "gulp-jshint": "^1.8.0",
    "gulp-mocha": "^0.5.2",
    "jshint-stylish": "^0.4.0",
    "qs": "^0.6.6",
    "string": "^1.9.0",
    "supertest": "^0.13.0"
  },
  "dependencies": {
    "jjv": "^1.0.0",
    "jjve": "^0.4.0",
    "lodash": "^2.4.1",
    "parseurl": "^1.2.0",
    "path-to-regexp": "^0.2.3"
  },
  "readme": "The project provides various tools for integrating and interacting with Swagger.  This project is in its infancy but\nwhat is within the repository should be fully tested and reusable.  Please visit the [issue tracker][project-issues] to\nsee what issues we are aware of and what features/enhancements we are working on.\n\n## Project Badges\n\n* Build status: [![Build Status](https://travis-ci.org/apigee-127/swagger-tools.svg)](https://travis-ci.org/apigee-127/swagger-tools)\n* Dependencies: [![Dependencies](https://david-dm.org/apigee-127/swagger-tools.svg)](https://david-dm.org/apigee-127/swagger-tools)\n* Developer dependencies: [![Dev Dependencies](https://david-dm.org/apigee-127/swagger-tools/dev-status.svg)](https://david-dm.org/apigee-127/swagger-tools#info=devDependencies&view=table)\n* Downloads: [![NPM Downloads Per Month](http://img.shields.io/npm/dm/swagger-tools.svg)](https://www.npmjs.org/package/swagger-tools)\n* License: [![License](http://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/apigee-127/swagger-tools/blob/master/LICENSE)\n* Version: [![NPM Version](http://img.shields.io/npm/v/swagger-tools.svg)](https://www.npmjs.org/package/swagger-tools)\n\n## Supported Swagger Versions\n\n* [1.2][swagger-docs-v1_2]\n* [2.0 (WIP)][swagger-docs-v2_0]\n\n## Features\n\n* Schema validation: For the file(s) supported by the Swagger specification, ensure they pass structural validation\nbased on the [JSON Schema][json-schema] associated with that version of the specification\n* ~~Semantic validation: Validates Swagger files above and beyond the structure of the file~~ _(Coming back shortly)_\n* Connect middleware for adding pertinent Swagger information to your requests (swagger-metadata)\n* Connect middleware for wiring request handlers to requests based on Swagger documentation (swagger-router)\n* Connect middleware for using Swagger resource documents for pre-route validation (swagger-validator)\n    * Validate the request Content-Type based on the operation's `consumes` value(s)\n    * Validate the request parameter types\n    * Validate the request parameter values\n\n## Installation\n\nswagger-tools is distributed via [NPM][npm] so installation is the usual: `npm install swagger-tools --save`\n\n## Usage\n\nThe swagger-tools module currently exposes one property: `v1_2`.  This is a reference to an object that has the\nfollowing structure:\n\n* `docsUrl`: This is a link to the Swagger documentation for the corresponding specification version\n* `schemasUrl`: This is a link to the Swagger JSON Schema files for the corresponding specification version\n* `version`: This is the Swagger specification version\n* `schemas`: This is an object where the keys are the Swagger JSON Schema file names and the object is the loaded schema\ncontents\n* `validate`: This is a function used to validate your Swagger document(s) based on the schema(s) for that\nspecifications schemas ~~and semantically~~ _(Coming back soon)_\n\nHere is an example showing how to use both versions of the `validate` function *(For more details, the sources are\ndocumented)*:\n\n**Swagger 1.2 (v1) Example**\n\n```javascript\nvar swagger = require('swagger-tools');\n\nvar spec = swagger.specs.v1_2; // Could also use 'swagger.specs.v1'\nvar petJson = require('./samples/1.2/pet.json');\nvar rlJson = require('./samples/1.2/resource-listing.json');\nvar results = spec.validate(rlJson, [petJson]);\n```\n\n**Swagger 2.0 (v2) Example**\n\n```javascript\nvar swagger = require('swagger-tools');\n\nvar spec = swagger.specs.v2_0; // Could also use 'swagger.specs.v2'\nvar petStoreJson = require('./samples/2.0/petstore.json');\nvar results = spec.validate(petStoreJson);\n```\n\nHere is an example of using the Swagger middleware for validating requests based on your Swagger resource documents:\n\n**Swagger 1.2 (v1) Example**\n\n```javascript\nvar swagger = require('swagger-tools');\n\nvar petJson = require('./samples/1.2/pet.json');\nvar resourceListing = require('./samples/1.2/resource-listing.json');\nvar storeJson = require('./samples/1.2/user.json');\nvar userJson = require('./samples/1.2/store.json');\nvar swaggerMetadata = swagger.middleware.v1_2.swaggerMetadata; // Could also use 'swagger.metadata.v1.swaggerMetadata'\nvar swaggerRouter = swagger.middleware.v1_2.swaggerRouter; // Could also use 'swagger.metadata.v1.swaggerRouter'\nvar swaggerValidator = swagger.middleware.v1_2.swaggerValidator; // Could also use 'swagger.metadata.v1.swaggerValidator'\n\nvar connect = require('connect');\nvar app = connect();\n\n// Interpret Swagger resources and attach metadata to request - must be first in swagger-tools middleware chain\napp.use(swaggerMetadata(resourceListing, [petJson, storeJson, userJson]));\n\n// Validate Swagger requests\napp.use(swaggerValidator());\n\n// Route validated requests to appropriate controller\napp.use(swaggerRouter({useStubs: true, controllers: './controllers'}));\n\n// ...\n```\n\n**Swagger 2.0 (v2) Example**\n\n```javascript\nvar swagger = require('swagger-tools');\n\nvar swaggerObject = require('./samples/2.0/petstore.json');\nvar swaggerMetadata = swagger.middleware.v2_0.swaggerMetadata; // Could also use 'swagger.metadata.v2.swaggerMetadata'\nvar swaggerRouter = swagger.middleware.v2_0.swaggerRouter; // Could also use 'swagger.metadata.v2.swaggerRouter'\nvar swaggerValidator = swagger.middleware.v2_0.swaggerValidator; // Could also use 'swagger.metadata.v2.swaggerValidator'\n\nvar connect = require('connect');\nvar app = connect();\n\n// Interpret Swagger resources and attach metadata to request - must be first in swagger-tools middleware chain\napp.use(swaggerMetadata(swaggerObject));\n\n// Validate Swagger requests\napp.use(swaggerValidator());\n\n// Route validated requests to appropriate controller\napp.use(swaggerRouter({useStubs: true, controllers: './controllers'}));\n\n// ...\n```\n\n## Contributing\n\nThis project uses [Gulp][gulp] for building so `npm install -g gulp` once you clone this project.  Running `gulp` in the\nproject root will lint check the source code and run the unit tests.\n\n[gulp]: http://gulpjs.com/\n[json-schema]: http://json-schema.org/\n[npm]: https://www.npmjs.org/\n[project-issues]: https://github.com/apigee/swagger-tools/issues\n[swagger]: https://helloreverb.com/developers/swagger\n[swagger-docs-v1_2]: https://github.com/wordnik/swagger-spec/blob/master/versions/1.2.md\n[swagger-docs-v2_0]: https://github.com/reverb/swagger-spec/blob/master/versions/2.0.md\n",
  "readmeFilename": "README.md",
  "_id": "swagger-tools@0.5.0",
  "_from": "swagger-tools@"
}
